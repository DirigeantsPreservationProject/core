import { APIMessageData, MessageType } from '@klasa/dapi-types';
import { Embed } from '../Embed';
import { Structure } from '../base/Structure';
import type { User } from '../User';
import type { WebhookClient } from 'src/lib/client/WebhookClient';
export declare class WebhookMessage<T = WebhookClient> extends Structure<T> {
    /**
     * Id of the message.
     * @since 0.0.1
     */
    readonly id: string;
    /**
     * Author of this message.
     * @since 0.0.1
     */
    readonly author: User<T>;
    /**
     * When this message was sent.
     * @since 0.0.1
     */
    readonly createdTimestamp: number;
    /**
     * Contents of the message.
     * @since 0.0.1
     */
    content: string;
    /**
     * Whether or not this was a TTS message.
     * @since 0.0.1
     */
    tts: boolean;
    /**
     * The embedded data.
     * @since 0.0.1
     */
    embeds: Embed[];
    /**
     * Used for validating a message was sent.
     * @since 0.0.1
     */
    readonly nonce?: string | null;
    /**
     * If the message is generated by a webhook, this is the webhook's id.
     * @since 0.0.1
     */
    readonly webhookID?: string | null;
    /**
     * The type of message.
     * @since 0.0.1
     * @see https://discord.com/developers/docs/resources/channel#message-object-message-types
     */
    readonly type: MessageType;
    constructor(client: T, data: APIMessageData);
    /**
     * When this message was sent.
     * @since 0.0.1
     */
    get createdAt(): Date;
    /**
     * Defines the toString behavior of this structure.
     * @since 0.0.4
     */
    toString(): string;
    protected _patch(_data: Partial<APIMessageData>): this;
}
